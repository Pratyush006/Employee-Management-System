#include <bits/stdc++.h>
#define MAX 20
using namespace std;

// Structure of Employee
struct Employee {
    string name;
    long int code;
    string designation;
    int exp;
    int age;
};

int num;
Employee emp[MAX];

// Function prototypes
void showMenu();
void build();
void insert();
void deleteRecord();
void searchRecord();

// Function to build the employee database
void build() {
    cout << "Build The Table\n";
    cout << "Maximum Entries can be " << MAX << "\n";
    cout << "Enter the number of entries required: ";
    cin >> num;

    if (num > MAX) {
        cout << "Maximum number of entries is " << MAX << "\n";
        num = MAX;
    }

    cout << "Enter the following data:\n";
    for (int i = 0; i < num; i++) {
        cout << "Name: ";
        cin >> emp[i].name;
        cout << "Employee ID: ";
        cin >> emp[i].code;
        cout << "Designation: ";
        cin >> emp[i].designation;
        cout << "Experience (years): ";
        cin >> emp[i].exp;
        cout << "Age: ";
        cin >> emp[i].age;
    }

    showMenu();
}

// Function to insert a new employee record
void insert() {
    if (num < MAX) {
        int i = num;
        num++;
        
        cout << "Enter the information of the Employee:\n";
        cout << "Name: ";
        cin >> emp[i].name;
        cout << "Employee ID: ";
        cin >> emp[i].code;
        cout << "Designation: ";
        cin >> emp[i].designation;
        cout << "Experience (years): ";
        cin >> emp[i].exp;
        cout << "Age: ";
        cin >> emp[i].age;
    } else {
        cout << "Employee Table is Full\n";
    }
    
    showMenu();
}

// Function to delete an employee record at a given index
void deleteIndex(int i) {
    for (int j = i; j < num - 1; j++) {
        emp[j] = emp[j + 1]; 
    }
}

// Function to delete an employee record by Employee ID
void deleteRecord() {
    cout << "Enter the Employee ID to Delete Record: ";
    int code;
    cin >> code;
    
    for (int i = 0; i < num; i++) {
        if (emp[i].code == code) {
            deleteIndex(i);
            num--;
            cout << "Record deleted successfully.\n";
            break;
        }
    }
    
    showMenu();
}

// Function to search for an employee record
void searchRecord() {
    cout << "Enter the Employee ID to Search Record: ";
    int code;
    cin >> code;

    for (int i = 0; i < num; i++) {
        if (emp[i].code == code) {
            cout << "Name: " << emp[i].name << "\n";
            cout << "Employee ID: " << emp[i].code << "\n";
            cout << "Designation: " << emp[i].designation << "\n";
            cout << "Experience: " << emp[i].exp << " years\n";
            cout << "Age: " << emp[i].age << "\n";
            return;
        }
    }
    
    cout << "Employee ID not found.\n";
    showMenu();
}

// Function to display menu options
void showMenu() {
    cout << "\n-------------------------\n";
    cout << "Employee Management System\n";
    cout << "-------------------------\n\n";
    cout << "Available Options:\n";
    cout << "1. Build Table\n";
    cout << "2. Insert New Entry\n";
    cout << "3. Delete Entry\n";
    cout << "4. Search a Record\n";
    cout << "5. Exit\n";
    
    int option;
    cout << "Enter your choice: ";
    cin >> option;

    switch (option) {
        case 1:
            build();
            break;
        case 2:
            insert();
            break;
        case 3:
            deleteRecord();
            break;
        case 4:
            searchRecord();
            break;
        case 5:
            cout << "Exiting program...\n";
            return;
        default:
            cout << "Invalid choice! Please enter 1-5.\n";
            showMenu();
    }
}

// Driver Code
int main() {
    showMenu();
    return 0;
}
